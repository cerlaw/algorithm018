/**
 * 字母异位词分组
 * https://leetcode-cn.com/problems/group-anagrams/
 */
public class GroupAnagrams {
    public List<List<String>> groupAnagrams(String[] strs) {
        if (strs == null || strs.length == 0) {
            return new ArrayList<List<String>>();
        }
        //使用HashMap对str进行分类
        Map<String, List<String>> map = new HashMap<>();
        for (int i = 0; i < strs.length; i++) {
            //使用char数组对strs中出现的char进行计数，并作为str的key
            char[] ca = new char[26];
            for (char c: strs[i].toCharArray()) {
                ca[c - 'a']++;
            }
            String s = new String(ca);
            if (!map.containsKey(s)) {
                map.put(s, new ArrayList<>());
            }
            map.get(s).add(strs[i]);
        }
        //这种写法之前没遇到过，学习！
        return new ArrayList<>(map.values());
    }
}